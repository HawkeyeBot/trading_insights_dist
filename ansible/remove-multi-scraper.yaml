---
- name: Delete multi-server dashboard setup
  hosts: localhost
  connection: local
  gather_facts: False
  user: root
  vars:
#    api_key: ""
    state: absent

  vars_prompt:
    - name: api_key
      prompt: Enter the API key
  tasks:
    # duplicate this for multiple scrapers
    - name: Delete scraper1 network
      ignore_errors: True
      hetzner.hcloud.server_network:
        api_token: "{{ api_key }}"
        network: trader-insights-network
        server: scraper1
        ip: 10.0.0.1
        state: "{{ state }}"
    - name: Delete scraper 1
      ignore_errors: True
      hcloud_server:
          api_token: "{{ api_key }}"
          name: scraper1
          server_type: cpx11
          image: ubuntu-24.04
          location: fsn1
          state: "{{ state }}"
          private_networks:
            - trader-insights-network
      register: server
    - name: Delete scraper 2
      ignore_errors: True
      hcloud_server:
          api_token: "{{ api_key }}"
          name: scraper2
          server_type: cpx11
          image: ubuntu-24.04
          location: fsn1
          state: "{{ state }}"
          private_networks:
            - trader-insights-network
      register: server
    - name: Delete scraper 3
      ignore_errors: True
      hcloud_server:
          api_token: "{{ api_key }}"
          name: scraper3
          server_type: cpx11
          image: ubuntu-24.04
          location: fsn1
          state: "{{ state }}"
          private_networks:
            - trader-insights-network
      register: server


    - name: Delete firewall from dashboard server
      ignore_errors: True
      hetzner.hcloud.firewall_resource:
        api_token: "{{ api_key }}"
        firewall: trader-insights-firewall
        servers:
          - dashboard
        state: "{{ state }}"
    - name: Delete a firewall with rules
      ignore_errors: True
      hetzner.hcloud.firewall:
        api_token: "{{ api_key }}"
        name: trader-insights-firewall
        rules:
          - description: allow tcp from everywhere for port 3000
            direction: in
            protocol: tcp
            port: "3000"
            source_ips:
              - 0.0.0.0/0
              - ::/0
        state: "{{ state }}"
    - name: Delete server network and specify the ip address
      ignore_errors: True
      hetzner.hcloud.server_network:
        api_token: "{{ api_key }}"
        network: trader-insights-network
        server: dashboard
        ip: 10.0.0.1
        state: "{{ state }}"
    - name: Delete dashboard server
      ignore_errors: True
      hcloud_server:
          api_token: "{{ api_key }}"
          name: dashboard
          server_type: cpx11
          image: ubuntu-24.04
          location: fsn1
          state: "{{ state }}"
          private_networks:
            - trader-insights-network
      register: server
#    - name: Delete postgres server
#      ignore_errors: True
#      hcloud_server:
#          api_token: "{{ api_key }}"
#          name: postgres
#          server_type: cpx11
#          image: ubuntu-24.04
#          location: fsn1
#          state: "{{ state }}"
#          private_networks:
#            - trader-insights-network
#      register: server
    - name: Delete subnetwork
      ignore_errors: True
      hetzner.hcloud.subnetwork:
        api_token: "{{ api_key }}"
        network: trader-insights-network
        ip_range: 10.0.0.0/24
        network_zone: eu-central
        type: server
        state: "{{ state }}"
    - name: Delete private network
      ignore_errors: True
      hcloud_network:
        api_token: "{{ api_key }}"
        name: trader-insights-network
        ip_range: 10.0.0.0/16
        state: "{{ state }}"
    - name: Remove local public key from hetzner
      ignore_errors: True
      hetzner.hcloud.ssh_key:
        name: trading-insights-key
        api_token: "{{ api_key }}"
        state: absent